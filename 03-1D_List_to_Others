결론 : 
1. Dictionary와 DataFrame은 데이터 access시 column명을 이용할 수 있다.
2. One dimensional Data는 4개의 data type어느 것으로 바꿔도 location과 slicing access가 가능하다.
3. List와 Dictionary는 for loop를 통해 each data를 access한다.
4. Series와 DataFrame은 for loop 없이 전체 데이터의 group function을 사용할 수 있다.


<<-------------- One dimensional List. 컬럼명을 변수로, List에는 데이터 value만 담는다. -------------->>
prices = [48.70, 47.09, 47.65, 48.00, 48.55]  ==> 데이터 값만 들어있다.
prices[0] ==> 48.70, prices[1] ==> 47.09     # location으로만 access할 수 있다.
prices[1:3] ===> [47.09, 47.65]              # Slicing:부분 access
prices.append(50.09) ===> 데이터 append       

- print(prices) 하면 가로로 출력됨
- 주로 for loop를 통하여 location number로 Data Access함 : 세로로 출력됨

===> Single key & value pair Dictionary 로 변환
prices = [48.70, 47.09, 47.65, 48.00, 48.55]
prices_dict = {"prices": [48.70, 47.09, 47.65, 48.00, 48.55]}
prices_dict['prices'][2] ===> 47.65               # location으로만 access할 수 있다.
prices_dict['prices'][1:3] ===> [47.09, 47.65]    # Slicing:부분 access

===> Pandas Series로 변환, 컬럼명은 변수로 pandas series에는 value만 담는다.
1. Pandas Series로 바꾸면 for loop를 쓰지 않고 group function을 사용할 수 있다.
2. for loop를 쓰지 않고 세로로 바로 출력될 수 있다.

prices = [48.70, 47.09, 47.65, 48.00, 48.55] 
prices_series = pd.Series(prices)
prices_series[0] ==> 48.70, prices_series[1] ==> 47.09  #location으로만 access할 수 있다.
prices_series[1:3] ==>                                  # Slicing:부분 access
1    47.09
2    47.65

print(prices_series)  하면 세로로 바로 출력됨

===> DataFrame으로 변환, 변환시 column name을 지정할 수 있다. DataFrame은 가로(컬럼명), 세로(location)을 다 가지고 있다.
1. Pandas DataFrame으로 바꾸면 for loop를 쓰지 않고 group function을 사용할 수 있다.
2. for loop를 쓰지 않고 세로로 바로 출력될 수 있다.
3. Pandas Series와의 차이는 컬럼명을 가지고 있다는 것이다.

group_one = ["Greg", "Tany", "Susan"]
group_one_df = pd.DataFrame(group_one, columns=['Name'])
group_one_df['Name'] ===> 세로로 출력
group_one_df.iloc[0] ===> "Greg"               # location으로만 access할 수 있다.
group_one_df.iloc[1:3] ===>                    # Slicing:부분 access
    Name
1   Tany
2  Susan

<<-------------- One Dictionary를 List에 담지 않고 바로 DataFrame으로 변환하면 error발생한다.  -------------->>
summary_df = pd.DataFrame({
                           "Total Unique Authors": author_count,
                           "Total Unique Publication Countries": country_count,
                           "Earliest Year": earliest_year,
                           "Latest Year": latest_year}                           
                           )  

해결방법)
1) List에 담고 DataFrame으로 변환
summary_df = pd.DataFrame([{
                           "Total Unique Authors": author_count,
                           "Total Unique Publication Countries": country_count,
                           "Earliest Year": earliest_year,
                           "Latest Year": latest_year}]                           
                           )  

2) index추가
summary_df = pd.DataFrame({
                           "Total Unique Authors": author_count,
                           "Total Unique Publication Countries": country_count,
                           "Earliest Year": earliest_year,
                           "Latest Year": latest_year},
                            index=[0]
                           )  
