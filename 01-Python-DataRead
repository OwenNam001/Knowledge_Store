<< CSV File Read >>

import os                # This will allow us to create file paths across operating systems
import csv               # Module for reading CSV files

csvpath = os.path.join('..', 'Resources', 'contacts.csv')
with open(csvpath, encoding='UTF-8') as csvfile:
  
  csvreader = csv.reader(csvfile, delimiter=',')                 # CSV reader specifies delimiter and variable that holds contents
  csv_header = next(csvreader)  # skip first row, skip header    # Read the header row first (skip this step if there is no header)
   
  for current_row in csvreader:                                  # Read each row of data after the header
# 1. each row를 읽으면서 데이터를 변수에 담고 간단한 계산은 바로 할 수 있다.
      employee_id = str(current_row[0])
      pto_hours_allowed = int(current_row[1])
      pto_hours_taken = int(current_row[2])  

#2. each row를 읽으면서 current_row[2] candidate_name을 유니크하게 만들면서 건수를 Single key % values pair dictionary를 생성
      candidates = {}
      candidate_name = current_row[2]

      if candidate_name not in candidates:
         candidates[candidate_name] = 1        # 이 문장이 {"Charles Casper Stockham" : 1} 을 만드는 문장
      else:
         candidates[candidate_name] += 1       # 이 문장이 {"Charles Casper Stockham" : 2} 을 만드는 문장

Ex) candidates dictionary의 결과
Charles Casper Stockham: 85213
Diana DeGette: 272892
Raymon Anthony Doane: 11606
  
# 3. each row를 multi-pair dictionary  {column name : value} 에 담아 List에 append하여 전체 테이블을 담는다.
      pto_hours_list = []                    
      employee_data = {
          # Key : value
          "employeeID": current_row[0],
          "pto_hours_allowed": int(current_row[1]),
          "pto_hours_taken": int(current_row[2]),
          "sick_hours_allowed": int(current_row[3]),
          "sick_hours_taken": int(current_row[4])
      }  
      pto_hours_list.append(employee_data)     =====> 사용하는 방법은 이것을 본다 https://github.com/OwenNam001/Knowledge_Store/blob/main/Python-Read-Howto-Use

     Ex) pto_hours_list 의 결과
    {'employeeID': '79227', 'pto_hours_allowed': 160, 'pto_hours_taken': 56, 'sick_hours_allowed': 0, 'sick_hours_taken': 0},
    {'employeeID': '79189', 'pto_hours_allowed': 160, 'pto_hours_taken': 28, 'sick_hours_allowed': 40, 'sick_hours_taken': 8},
    {'employeeID': '79151', 'pto_hours_allowed': 120, 'pto_hours_taken': 100, 'sick_hours_allowed': 40, 'sick_hours_taken': 0}

# 4. cvs 파일을 읽으면서 for loop를 돌지 않고 바로 DataFrame으로 전체 테이블을 담는다.
import pandas as pd
import os

csvpath = os.path.join('..', 'Resources', 'contacts.csv')
data_file_df  = pd.read_csv(csvpath, encoding='UTF-8')                          # CSV 파일을 directly DataFrame으로 불러오기 

=====> 사용하는 방법은 이것을 본다 https://github.com/OwenNam001/Knowledge_Store/blob/main/Python-Read-Howto-Use
