
times = [96,98,100,105,85,88,95,100,101,102,97,98,5]
fig1, ax1 = plt.subplots()
ax1.boxplot(times)
ax1.set_title('Reaction Times at Tennis Batting Cage')
ax1.set_ylabel('Reaction Time (ms)')
plt.show()

times.sort()

<< 분위수 >>
Series.quantile을 이용한다.
temperatures.quantile([0.5]) ==> median value, mean(average)가 아니다.
temperatures.quantile([0.25, 0.5, 0.75]) ==> 25%, 50%, 75% 에 해당하는 value

<< IRQ, outlier 구하기 위한 lower_bound, upper_bound 구하기 >>
quartiles = temperatures.quantile([.25,.5,.75])
lowerq = quartiles[0.25]
upperq = quartiles[0.75]
iqr = upperq-lowerq

lower_bound = lowerq - (1.5*iqr)
upper_bound = upperq + (1.5*iqr)


<< Correlation coefficient계산하기, Linear regression >>
# Add the linear regression equation and line to plot
x_values = san_diego_housing['AveRooms']
y_values = san_diego_housing['MEDV']
(slope, intercept, rvalue, pvalue, stderr) = linregress(x_values, y_values)
regress_values = x_values * slope + intercept
line_eq = "y = " + str(round(slope,2)) + "x + " + str(round(intercept,2))
plt.scatter(x_values,y_values)
plt.plot(x_values,regress_values,"r-")

# x-axis, y-axis range set
# plt.xlim(min(x_axis) - 1, max(x_axis) + 1)
# plt.ylim(min(data) - 10, max(data) + 10)

# linear line plot
plt.annotate(line_eq,(45, 10),fontsize=15,color="red")       #45는 x값, 10은 값에 위치해라는 
plt.xlabel('Rooms in House')
plt.ylabel('Median House Prices ($100,000)')
print(f"The r-squared is: {rvalue**2}")
plt.show()
  

<< Pearson's Correlation Absolute value r  r<0.3 : None or very weak, 0.3<=r<0.5: Weak, 0.5<=r<0.7: Moderate, r>=0.7: Strong >> 
import scipy.stats as st

x_values_northern = northern_hemi_df['Lat']
y_values_northern = northern_hemi_df['Max Temp']

correlation_northern = st.pearsonr(x_values_northern,y_values_northern)

print(f"The correlation between northern hemi. Lat vs Max Temp is {abs(round(correlation_northern[0],2))}")


